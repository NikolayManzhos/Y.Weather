apply plugin: 'com.android.application'
apply plugin: 'realm-android'

apply plugin: 'jacoco'
apply from: "$rootDir/jacoco.gradle"

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
def apiPropertiesFile = rootProject.file("api.properties")
def apiProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
apiProperties.load(new FileInputStream(apiPropertiesFile))

android {
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.example.weather"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    buildTypes.each {
        it.buildConfigField 'String', 'WEATHER_URL', apiProperties['BaseWeatherUrl']
        it.buildConfigField 'String', 'WEATHER_KEY', apiProperties['OpenWeatherMapKey']
        it.buildConfigField 'String', 'PLACES_URL', apiProperties['PlacesUrl']
        it.buildConfigField 'String', 'PLACES_KEY', apiProperties['PlacesKey']
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

dependencies {
    //Support libs
    implementation "com.android.support:preference-v7:$support"
    implementation "com.android.support:cardview-v7:$support"
    implementation "com.android.support:design:$support"
    implementation "com.android.support:appcompat-v7:$support"
    implementation "com.android.support.constraint:constraint-layout:$constraint"
    //RxJava
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava"
    implementation "com.jakewharton.rxbinding2:rxbinding:$rxbindings"
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"
    //Dagger
    implementation "com.google.dagger:dagger:$dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger"
    //ButterKnife
    implementation "com.jakewharton:butterknife:$butterknife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife"
    //Android Job
    implementation "com.evernote:android-job:$androidjob"
    //Gson
    implementation "com.google.code.gson:gson:$gson"
    //Material Preferences
    implementation "com.yarolegovich:mp:$materialprefs"

    //RealmDB Viewer
    debugApi "com.facebook.stetho:stetho:$stetho"
    debugApi "com.uphyca:stetho_realm:$stethoRealm"

    testImplementation "junit:junit:$junit"
    testImplementation "org.mockito:mockito-core:$mockito"
    testImplementation "org.robolectric:robolectric:$robolectric"
    testImplementation "io.github.benas:random-beans:$random_beans"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$espresso", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espresso"
}